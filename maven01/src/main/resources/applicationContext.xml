<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context.xsd
 http://www.springframework.org/schema/aop
 http://www.springframework.org/schema/aop/spring-aop.xsd
 http://www.springframework.org/schema/tx
 http://www.springframework.org/schema/tx/spring-tx.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--dao层配置文件开始-->
    <!--配置连接池druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://192.168.137.37:3306/maven"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>

    <!--配置sqlSession工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--扫描pojo包,给包下pojo对象起别名-->
        <property name="typeAliasesPackage" value="com.learn.maven.domain"/>

    </bean>

    <!--扫描接口包路径，生成包下所有接口的代理对象，并且放入spring容器之中-->

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.learn.maven.dao"/>
    </bean>

    <!--dao层配置文件结束-->

    <!--业务层配置文件开始-->
    <!--组件扫描注解生效-->
    <context:component-scan base-package="com.learn.maven.service"/>
    <!--事务配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--配置事务通知-->
    <tx:advice id="advice">
       <tx:attributes>
           <tx:method name="save*" propagation="REQUIRED"/><!--save开头的方法扫描-->
           <tx:method name="update*" propagation="REQUIRED"/>
           <tx:method name="delete*" propagation="REQUIRED"/>
           <tx:method name="find*" read-only="true"/>
           <tx:method name="*" propagation="REQUIRED"/><!--全局扫描-->
       </tx:attributes>
    </tx:advice>
    <!--配置切面-->
    <aop:config >
        <!--execution 中第一个*表示返回值，第二*表示目录下所有类，第三个*(..)表示类的所有方法-->
        <!--配置切入点-->
        <aop:pointcut id="pointcut" expression="execution(* com.learn.maven.service.impl.*.*(..))"/>
        <!--配置切面：切入点和通知都要设置-->
        <aop:advisor pointcut-ref="pointcut" advice-ref="advice"/>
    </aop:config>
    <!--业务层配置文件结束-->
</beans>